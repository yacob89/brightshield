{"ast":null,"code":"var _jsxFileName = \"/Users/yacobmadiana/Documents/personal/portfolio/src/components/HomepageHeading.js\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Button, Container, Header, Icon } from \"semantic-ui-react\";\nimport TimerMachine from \"react-timer-machine\";\nimport moment from \"moment\";\nimport momentDurationFormatSetup from \"moment-duration-format\";\nmomentDurationFormatSetup(moment);\nexport default class HomepageHeading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      titleDisplay: \"inline-block\",\n      timerDisplay: \"none\",\n      timerStart: false,\n      timerPause: false,\n      initialTime: 11000,\n      currentTask: \"calling\",\n      currentText: \"Calling\",\n      tick: 10 // media buttons\n\n    }; // Tasks:\n\n    /* \n    1. calling 31\n    2. praying 61\n    3. prayreading 151\n    4. confession 61\n    5. consecration 31\n    6. thanksgiving 31 \n    7. petition 61\n    */\n\n    this.startTimer = this.startTimer.bind(this);\n    this.pauseTimer = this.pauseTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.changeTime = this.changeTime.bind(this);\n  }\n\n  startTimer(start) {\n    this.setState({\n      titleDisplay: \"none\"\n    });\n    this.setState({\n      timerDisplay: \"inline-block\"\n    });\n    this.setState({\n      timerStart: true\n    });\n    this.setState({\n      timerPause: false\n    });\n  }\n\n  pauseTimer() {\n    this.setState({\n      timerPause: true\n    });\n  }\n\n  stopTimer() {\n    this.setState({\n      timerStart: false\n    });\n  }\n  /* resetTimer(){\n    console.log(\"Reset\");\n    this.setState({ titleDisplay: \"inline-block\" });\n    this.setState({ timerDisplay: \"none\" });\n    this.setState({ timerStart: false });\n    this.setState({ timerPause: false });\n    this.setState({ currentTask: \"calling\" });\n    this.setState({ currentText: \"Calling\" });\n    this.setState({ initialTime: 11000 });\n  } */\n\n\n  changeTime(time) {\n    var currentTask = this.state.currentTask;\n    var nextTime = 6000;\n\n    if (currentTask === \"calling\") {\n      this.setState({\n        initialTime: nextTime\n      });\n    }\n\n    if (currentTask === \"praying\") {\n      this.setState({\n        initialTime: nextTime\n      });\n    }\n\n    if (currentTask === \"prayreading\") {\n      this.setState({\n        initialTime: nextTime\n      });\n    }\n\n    if (currentTask === \"confession\") {\n      this.setState({\n        initialTime: nextTime\n      });\n    }\n\n    if (currentTask === \"consecration\") {\n      this.setState({\n        initialTime: nextTime\n      });\n    }\n\n    if (currentTask === \"thanksgiving\") {\n      this.setState({\n        initialTime: nextTime\n      });\n    }\n\n    if (currentTask === \"petition\") {\n      this.setState({\n        initialTime: nextTime\n      });\n    }\n\n    console.log(\"Initial time stop: \", this.state.initialTime);\n    console.log(\"Task stop: \", this.state.currentTask);\n  }\n\n  render() {\n    const mobile = this.props.mobile;\n    return React.createElement(Container, {\n      text: true,\n      textAlign: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(TimerMachine, {\n      timeStart: this.state.initialTime // start at 10 seconds\n      ,\n      timeEnd: 0 * 1000 // end at 20 seconds\n      ,\n      started: this.state.timerStart,\n      paused: this.state.timerPause,\n      countdown: true // use as stopwatch\n      ,\n      interval: 1000 // tick every 1 second\n      ,\n      formatTimer: (time, ms) => moment.duration(ms, \"milliseconds\").format(\"h:mm:ss\"),\n      onStart: time => console.info(\"Timer started: \".concat(JSON.stringify(time))),\n      onStop: time => {\n        console.info(\"Timer stopped: \".concat(JSON.stringify(time)));\n        this.changeTime();\n      },\n      onTick: time => {\n        console.info(\"Timer ticked: \".concat(JSON.stringify(time)));\n        console.log(\"Detik: \", time.s);\n        this.setState({\n          tick: time.s\n        });\n\n        if (time.s === this.state.initialTime / 1000 - 1) {\n          if (this.state.currentTask === \"calling\") {\n            this.setState({\n              currentText: \"Calling\"\n            });\n          }\n\n          if (this.state.currentTask === \"praying\") {\n            this.setState({\n              currentText: \"Praying\"\n            });\n          }\n\n          if (this.state.currentTask === \"prayreading\") {\n            this.setState({\n              currentText: \"Pray Reading\"\n            });\n          }\n\n          if (this.state.currentTask === \"confession\") {\n            this.setState({\n              currentText: \"Confession\"\n            });\n          }\n\n          if (this.state.currentTask === \"consecration\") {\n            this.setState({\n              currentText: \"Consecration\"\n            });\n          }\n\n          if (this.state.currentTask === \"thanksgiving\") {\n            this.setState({\n              currentText: \"Thanks Giving\"\n            });\n          }\n\n          if (this.state.currentTask === \"petition\") {\n            this.setState({\n              currentText: \"Petition\"\n            });\n          }\n\n          if (this.state.currentTask === \"ending\") {\n            this.setState({\n              currentText: \"Have a nice day, Grace be with you\"\n            });\n          }\n        }\n      },\n      onPause: time => console.info(\"Timer paused: \".concat(JSON.stringify(time))),\n      onResume: time => console.info(\"Timer resumed: \".concat(JSON.stringify(time))),\n      onComplete: time => {\n        console.info(\"Timer completed: \".concat(JSON.stringify(time)));\n        var currentTask = this.state.currentTask;\n\n        if (currentTask === \"calling\") {\n          this.setState({\n            currentTask: \"praying\"\n          });\n          this.setState({\n            timerStart: true\n          });\n          console.log(\"Initial time: \", this.state.initialTime);\n        }\n\n        if (currentTask === \"praying\") {\n          this.setState({\n            currentTask: \"prayreading\"\n          });\n          this.setState({\n            timerStart: true\n          });\n          console.log(\"Initial time: \", this.state.initialTime);\n        }\n\n        if (currentTask === \"prayreading\") {\n          this.setState({\n            currentTask: \"confession\"\n          });\n          this.setState({\n            timerStart: true\n          });\n          console.log(\"Initial time: \", this.state.initialTime);\n        }\n\n        if (currentTask === \"confession\") {\n          this.setState({\n            currentTask: \"consecration\"\n          });\n          this.setState({\n            timerStart: true\n          });\n          console.log(\"Initial time: \", this.state.initialTime);\n        }\n\n        if (currentTask === \"consecration\") {\n          this.setState({\n            currentTask: \"thanksgiving\"\n          });\n          this.setState({\n            timerStart: true\n          });\n          console.log(\"Initial time: \", this.state.initialTime);\n        }\n\n        if (currentTask === \"thanksgiving\") {\n          this.setState({\n            currentTask: \"petition\"\n          });\n          this.setState({\n            timerStart: true\n          });\n          console.log(\"Initial time: \", this.state.initialTime);\n        }\n\n        if (currentTask === \"petition\") {\n          this.setState({\n            currentTask: \"ending\"\n          });\n          this.setState({\n            timerStart: true\n          });\n          console.log(\"Initial time: \", this.state.initialTime);\n        }\n\n        if (currentTask === \"ending\") {\n          this.setState({\n            currentTask: \"calling\"\n          });\n          this.setState({\n            timerStart: false\n          });\n          console.log(\"Initial time: \", this.state.initialTime);\n        } //this.setState({ tick: this.state.initialTime / 1000 - 1 });\n\n\n        console.log(\"Initial time complete: \", this.state.initialTime);\n        console.log(\"Task complete: \", this.state.currentTask);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: this.state.titleDisplay\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      content: \"Seven Minutes With The Lord\",\n      inverted: true,\n      style: {\n        fontSize: mobile ? \"1.5em\" : \"2em\",\n        fontWeight: \"normal\",\n        marginBottom: 0,\n        marginTop: mobile ? \"1.5em\" : \"3em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h2\",\n      content: \"Let's begin contacting The Lord.\",\n      inverted: true,\n      style: {\n        fontSize: mobile ? \"1.5em\" : \"1.7em\",\n        fontWeight: \"normal\",\n        marginTop: mobile ? \"0.5em\" : \"1.5em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(Button, {\n      primary: true,\n      size: \"huge\",\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Begin\", React.createElement(Icon, {\n      name: \"right arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        display: this.state.timerDisplay\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      content: this.state.currentText,\n      inverted: true,\n      style: {\n        fontSize: mobile ? \"1.5em\" : \"1.7em\",\n        fontWeight: \"normal\",\n        marginTop: mobile ? \"0.5em\" : \"0.5em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      inverted: true,\n      style: {\n        fontSize: mobile ? \"6.0em\" : \"6.8em\",\n        fontWeight: \"normal\",\n        marginTop: mobile ? \"0.1em\" : \"0.1em\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, this.state.tick), React.createElement(Button.Group, {\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"play\",\n      onClick: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.pauseTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"pause\",\n      onClick: this.pauseTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    })))));\n  }\n\n}\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool\n};","map":{"version":3,"sources":["/Users/yacobmadiana/Documents/personal/portfolio/src/components/HomepageHeading.js"],"names":["PropTypes","React","Component","Button","Container","Header","Icon","TimerMachine","moment","momentDurationFormatSetup","HomepageHeading","constructor","props","state","titleDisplay","timerDisplay","timerStart","timerPause","initialTime","currentTask","currentText","tick","startTimer","bind","pauseTimer","stopTimer","changeTime","start","setState","time","nextTime","console","log","render","mobile","display","ms","duration","format","info","JSON","stringify","s","fontSize","fontWeight","marginBottom","marginTop","propTypes","bool"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Button, Container, Header, Icon } from \"semantic-ui-react\";\nimport TimerMachine from \"react-timer-machine\";\nimport moment from \"moment\";\nimport momentDurationFormatSetup from \"moment-duration-format\";\n\nmomentDurationFormatSetup(moment);\n\nexport default class HomepageHeading extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      titleDisplay: \"inline-block\",\n      timerDisplay: \"none\",\n      timerStart: false,\n      timerPause: false,\n      initialTime: 11000,\n      currentTask: \"calling\",\n      currentText: \"Calling\",\n      tick: 10,\n      // media buttons\n    };\n    // Tasks:\n    /* \n    1. calling 31\n    2. praying 61\n    3. prayreading 151\n    4. confession 61\n    5. consecration 31\n    6. thanksgiving 31 \n    7. petition 61\n    */\n    this.startTimer = this.startTimer.bind(this);\n    this.pauseTimer = this.pauseTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.changeTime = this.changeTime.bind(this);\n  }\n\n  startTimer(start) {\n    this.setState({ titleDisplay: \"none\" });\n    this.setState({ timerDisplay: \"inline-block\" });\n    this.setState({ timerStart: true });\n    this.setState({ timerPause: false });\n  }\n\n  pauseTimer(){\n    this.setState({ timerPause: true });\n  }\n\n  stopTimer(){\n    this.setState({ timerStart: false });\n  }\n\n  /* resetTimer(){\n    console.log(\"Reset\");\n    this.setState({ titleDisplay: \"inline-block\" });\n    this.setState({ timerDisplay: \"none\" });\n    this.setState({ timerStart: false });\n    this.setState({ timerPause: false });\n    this.setState({ currentTask: \"calling\" });\n    this.setState({ currentText: \"Calling\" });\n    this.setState({ initialTime: 11000 });\n  } */\n\n  changeTime(time) {\n    var currentTask = this.state.currentTask;\n    var nextTime = 6000;\n    if (currentTask === \"calling\") {\n      this.setState({ initialTime: nextTime });\n    }\n    if (currentTask === \"praying\") {\n      this.setState({ initialTime: nextTime });\n    }\n    if (currentTask === \"prayreading\") {\n      this.setState({ initialTime: nextTime });\n    }\n    if (currentTask === \"confession\") {\n      this.setState({ initialTime: nextTime });\n    }\n    if (currentTask === \"consecration\") {\n      this.setState({ initialTime: nextTime });\n    }\n    if (currentTask === \"thanksgiving\") {\n      this.setState({ initialTime: nextTime });\n    }\n    if (currentTask === \"petition\") {\n      this.setState({ initialTime: nextTime });\n    }\n    console.log(\"Initial time stop: \", this.state.initialTime);\n    console.log(\"Task stop: \", this.state.currentTask);\n  }\n\n  render() {\n    const { mobile } = this.props;\n\n    return (\n      <Container text textAlign=\"center\">\n        <div style={{ display: \"none\" }}>\n          <TimerMachine\n            timeStart={this.state.initialTime} // start at 10 seconds\n            timeEnd={0 * 1000} // end at 20 seconds\n            started={this.state.timerStart}\n            paused={this.state.timerPause}\n            countdown={true} // use as stopwatch\n            interval={1000} // tick every 1 second\n            formatTimer={(time, ms) =>\n              moment.duration(ms, \"milliseconds\").format(\"h:mm:ss\")\n            }\n            onStart={time =>\n              console.info(`Timer started: ${JSON.stringify(time)}`)\n            }\n            onStop={time => {\n              console.info(`Timer stopped: ${JSON.stringify(time)}`);\n              this.changeTime();\n            }}\n            onTick={time => {\n              console.info(`Timer ticked: ${JSON.stringify(time)}`);\n              console.log(\"Detik: \", time.s);\n              this.setState({ tick: time.s });\n              if(time.s === this.state.initialTime/1000 - 1){\n                if (this.state.currentTask === \"calling\") {\n                  this.setState({ currentText: \"Calling\" });\n                }\n                if (this.state.currentTask === \"praying\") {\n                  this.setState({ currentText: \"Praying\" });\n                }\n                if (this.state.currentTask === \"prayreading\") {\n                  this.setState({ currentText: \"Pray Reading\" });\n                }\n                if (this.state.currentTask === \"confession\") {\n                  this.setState({ currentText: \"Confession\" });\n                }\n                if (this.state.currentTask === \"consecration\") {\n                  this.setState({ currentText: \"Consecration\" });\n                }\n                if (this.state.currentTask === \"thanksgiving\") {\n                  this.setState({ currentText: \"Thanks Giving\" });\n                }\n                if (this.state.currentTask === \"petition\") {\n                  this.setState({ currentText: \"Petition\" });\n                }\n                if (this.state.currentTask === \"ending\") {\n                  this.setState({ currentText: \"Have a nice day, Grace be with you\" });\n                }\n              }\n            }}\n            onPause={time =>\n              console.info(`Timer paused: ${JSON.stringify(time)}`)\n            }\n            onResume={time =>\n              console.info(`Timer resumed: ${JSON.stringify(time)}`)\n            }\n            onComplete={time => {\n              console.info(`Timer completed: ${JSON.stringify(time)}`);\n              var currentTask = this.state.currentTask;\n              if (currentTask === \"calling\") {\n                this.setState({ currentTask: \"praying\" });\n                this.setState({ timerStart: true });\n                console.log(\"Initial time: \", this.state.initialTime);\n              }\n              if (currentTask === \"praying\") {\n                this.setState({ currentTask: \"prayreading\" });\n                this.setState({ timerStart: true });\n                console.log(\"Initial time: \", this.state.initialTime);\n              }\n              if (currentTask === \"prayreading\") {\n                this.setState({ currentTask: \"confession\" });\n                this.setState({ timerStart: true });\n                console.log(\"Initial time: \", this.state.initialTime);\n              }\n              if (currentTask === \"confession\") {\n                this.setState({ currentTask: \"consecration\" });\n                this.setState({ timerStart: true });\n                console.log(\"Initial time: \", this.state.initialTime);\n              }\n              if (currentTask === \"consecration\") {\n                this.setState({ currentTask: \"thanksgiving\" });\n                this.setState({ timerStart: true });\n                console.log(\"Initial time: \", this.state.initialTime);\n              }\n              if (currentTask === \"thanksgiving\") {\n                this.setState({ currentTask: \"petition\" });\n                this.setState({ timerStart: true });\n                console.log(\"Initial time: \", this.state.initialTime);\n              }\n              if (currentTask === \"petition\") {\n                this.setState({ currentTask: \"ending\" });\n                this.setState({ timerStart: true });\n                console.log(\"Initial time: \", this.state.initialTime);\n              }\n              if (currentTask === \"ending\") {\n                this.setState({ currentTask: \"calling\" });\n                this.setState({ timerStart: false });\n                console.log(\"Initial time: \", this.state.initialTime);\n              }\n              //this.setState({ tick: this.state.initialTime / 1000 - 1 });\n              console.log(\"Initial time complete: \", this.state.initialTime);\n              console.log(\"Task complete: \", this.state.currentTask);\n            }}\n          />\n        </div>\n\n        <div style={{ display: this.state.titleDisplay }}>\n          <Header\n            as=\"h1\"\n            content=\"Seven Minutes With The Lord\"\n            inverted\n            style={{\n              fontSize: mobile ? \"1.5em\" : \"2em\",\n              fontWeight: \"normal\",\n              marginBottom: 0,\n              marginTop: mobile ? \"1.5em\" : \"3em\"\n            }}\n          />\n          <Header\n            as=\"h2\"\n            content=\"Let's begin contacting The Lord.\"\n            inverted\n            style={{\n              fontSize: mobile ? \"1.5em\" : \"1.7em\",\n              fontWeight: \"normal\",\n              marginTop: mobile ? \"0.5em\" : \"1.5em\"\n            }}\n          />\n          <Button primary size=\"huge\" onClick={this.startTimer}>\n            Begin\n            <Icon name=\"right arrow\" />\n          </Button>\n        </div>\n        <div style={{ display: this.state.timerDisplay }}>\n          <Header\n            as=\"h2\"\n            content={this.state.currentText}\n            inverted\n            style={{\n              fontSize: mobile ? \"1.5em\" : \"1.7em\",\n              fontWeight: \"normal\",\n              marginTop: mobile ? \"0.5em\" : \"0.5em\"\n            }}\n          />\n          <Header\n            as=\"h1\"\n            inverted\n            style={{\n              fontSize: mobile ? \"6.0em\" : \"6.8em\",\n              fontWeight: \"normal\",\n              marginTop: mobile ? \"0.1em\" : \"0.1em\"\n            }}\n          >\n            {this.state.tick}\n          </Header>\n          <Button.Group icon>\n            <Button onClick={this.startTimer}>\n              <Icon name=\"play\" onClick={this.startTimer} />\n            </Button>\n            <Button onClick={this.pauseTimer}>\n              <Icon name=\"pause\" onClick={this.pauseTimer} />\n            </Button>\n          </Button.Group>\n        </div>\n      </Container>\n    );\n  }\n}\n\nHomepageHeading.propTypes = {\n  mobile: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}